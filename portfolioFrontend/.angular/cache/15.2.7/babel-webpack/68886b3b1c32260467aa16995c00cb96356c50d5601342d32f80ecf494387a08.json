{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./authentication.service\";\nexport class InterceptorService {\n  constructor(authenticationService) {\n    this.authenticationService = authenticationService;\n  }\n  intercept(req, next) {\n    var currentUser = this.authenticationService.UsuarioAutenticado;\n    if (currentUser && currentUser.accessToken) {\n      req = req.clone({\n        setHeaders: {\n          Authorization: `Bearer ${currentUser.accesToken}`\n        }\n      });\n    }\n    console.log(\"El interceptor esta corriendo \" + JSON.stringify(currentUser));\n    return next.handle(req);\n  }\n}\nInterceptorService.ɵfac = function InterceptorService_Factory(t) {\n  return new (t || InterceptorService)(i0.ɵɵinject(i1.AuthenticationService));\n};\nInterceptorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: InterceptorService,\n  factory: InterceptorService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,kBAAkB;EAE7BC,YAAoBC,qBAA2C;IAA3C,0BAAqB,GAArBA,qBAAqB;EAA0B;EAEnEC,SAAS,CAACC,GAAqB,EAAEC,IAAiB;IAEhD,IAAIC,WAAW,GAAC,IAAI,CAACJ,qBAAqB,CAACK,kBAAkB;IAC7D,IAAID,WAAW,IAAIA,WAAW,CAACE,WAAW,EAAE;MAC1CJ,GAAG,GAACA,GAAG,CAACK,KAAK,CAAC;QACZC,UAAU,EAAC;UACTC,aAAa,EAAE,UAAUL,WAAW,CAACM,UAAU;;OAElD,CAAC;;IAEJC,OAAO,CAACC,GAAG,CAAC,gCAAgC,GAACC,IAAI,CAACC,SAAS,CAACV,WAAW,CAAC,CAAC;IACzE,OAAOD,IAAI,CAACY,MAAM,CAACb,GAAG,CAAC;EACzB;;AAhBWJ,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;SAAlBA,kBAAkB;EAAAkB,SAAlBlB,kBAAkB;EAAAmB,YAFjB;AAAM","names":["InterceptorService","constructor","authenticationService","intercept","req","next","currentUser","UsuarioAutenticado","accessToken","clone","setHeaders","Authorization","accesToken","console","log","JSON","stringify","handle","factory","providedIn"],"sourceRoot":"","sources":["/Users/malen/Desktop/PORTFOLIO/Proyecto Integrador/portfolio_malen/portfolioFrontend/src/app/service/interceptor.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from './authentication.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InterceptorService implements HttpInterceptor{\n\n  constructor(private authenticationService:AuthenticationService) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    var currentUser=this.authenticationService.UsuarioAutenticado;\n    if (currentUser && currentUser.accessToken) {\n      req=req.clone({\n        setHeaders:{\n          Authorization: `Bearer ${currentUser.accesToken}`\n        }\n      })\n    }\n    console.log(\"El interceptor esta corriendo \"+JSON.stringify(currentUser));\n    return next.handle(req);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}